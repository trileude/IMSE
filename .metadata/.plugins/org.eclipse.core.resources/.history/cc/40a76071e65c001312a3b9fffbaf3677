package transformation;

import fr.esir.imse.PollSystemStandaloneSetup;
import fr.esir.imse.pollSystem.Poll;
import fr.esir.imse.pollSystem.PollSystem;
import java.util.Iterator;
import mmui.CheckBox;
import mmui.ElementUI;
import mmui.Layout;
import mmui.MmuiFactory;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.xtext.example.mydsl.MyDslStandaloneSetup;
import org.xtext.example.mydsl.myDsl.ListeQuestions;
import org.xtext.example.mydsl.myDsl.Question;

@SuppressWarnings("all")
public class Transformation {
  public PollSystem parsingPollSystem(final String nomFichier) {
    ResourceSetImpl _resourceSetImpl = new ResourceSetImpl();
    ResourceSet resourceSet = _resourceSetImpl;
    PollSystemStandaloneSetup.doSetup();
    URI _createURI = URI.createURI(nomFichier);
    Resource resource = resourceSet.getResource(_createURI, true);
    EList<EObject> _contents = resource.getContents();
    EObject _head = IterableExtensions.<EObject>head(_contents);
    PollSystem ps = ((PollSystem) _head);
    return ps;
  }
  
  public ListeQuestions parsingMapping(final String nomFichier) {
    ResourceSetImpl _resourceSetImpl = new ResourceSetImpl();
    ResourceSet resourceSet = _resourceSetImpl;
    MyDslStandaloneSetup.doSetup();
    URI _createURI = URI.createURI(nomFichier);
    Resource resource = resourceSet.getResource(_createURI, true);
    EList<EObject> _contents = resource.getContents();
    EObject _head = IterableExtensions.<EObject>head(_contents);
    ListeQuestions listeQuestions = ((ListeQuestions) _head);
    return listeQuestions;
  }
  
  public void tranform(final String pollSystemFile, final String mappingFile) {
    PollSystem _parsingPollSystem = this.parsingPollSystem(pollSystemFile);
    PollSystem ps = ((PollSystem) _parsingPollSystem);
    ListeQuestions _parsingMapping = this.parsingMapping(mappingFile);
    ListeQuestions map = ((ListeQuestions) _parsingMapping);
    EList<Poll> _polls = ps.getPolls();
    Iterator<Poll> _iterator = _polls.iterator();
    Iterator<Poll> itPs = ((Iterator<Poll>) _iterator);
    EList<Question> _questions = map.getQuestions();
    Iterator<Question> _iterator_1 = _questions.iterator();
    Iterator<Question> itMap = ((Iterator<Question>) _iterator_1);
    Layout ui = MmuiFactory.eINSTANCE.createLayout();
    boolean _hasNext = itPs.hasNext();
    if (_hasNext) {
      Poll _next = itPs.next();
      EList<fr.esir.imse.pollSystem.Question> _questions_1 = _next.getQuestions();
      Iterator<fr.esir.imse.pollSystem.Question> _iterator_2 = _questions_1.iterator();
      Iterator<fr.esir.imse.pollSystem.Question> itQuestionsPaul = ((Iterator<fr.esir.imse.pollSystem.Question>) _iterator_2);
      boolean _hasNext_1 = itQuestionsPaul.hasNext();
      if (_hasNext_1) {
        fr.esir.imse.pollSystem.Question pollQuestion = itQuestionsPaul.next();
        CheckBox _createCheckBox = MmuiFactory.eINSTANCE.createCheckBox();
        ui.setFirstElement(_createCheckBox);
        ElementUI _firstElement = ui.getFirstElement();
        String _id = pollQuestion.getId();
        _firstElement.setId(_id);
        ElementUI _firstElement_1 = ui.getFirstElement();
        String _text = pollQuestion.getText();
        _firstElement_1.setQuestion(_text);
        boolean _hasNext_2 = itQuestionsPaul.hasNext();
        boolean _while = _hasNext_2;
        while (_while) {
          {
            fr.esir.imse.pollSystem.Question _next_1 = itQuestionsPaul.next();
            pollQuestion = _next_1;
            ElementUI _firstElement_2 = ui.getFirstElement();
            CheckBox _createCheckBox_1 = MmuiFactory.eINSTANCE.createCheckBox();
            _firstElement_2.setNext(_createCheckBox_1);
            ElementUI _firstElement_3 = ui.getFirstElement();
            String _id_1 = pollQuestion.getId();
            _firstElement_3.setId(_id_1);
            ElementUI _firstElement_4 = ui.getFirstElement();
            String _text_1 = pollQuestion.getText();
            _firstElement_4.setQuestion(_text_1);
          }
          boolean _hasNext_3 = itQuestionsPaul.hasNext();
          _while = _hasNext_3;
        }
      }
    }
  }
}
